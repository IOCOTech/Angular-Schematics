import { Location } from '@angular/common';
import { HTTP_INTERCEPTORS, HttpClient } from '@angular/common/http';
import { ModuleWithProviders, NgModule } from '@angular/core';
import { Router } from '@angular/router';
import { MSAL_GUARD_CONFIG, MSAL_INSTANCE, MSAL_INTERCEPTOR_CONFIG, MsalBroadcastService, MsalInterceptor, MsalModule, MsalService } from '@azure/msal-angular';
import { MSALGuardConfigFactory, MSALInstanceFactory, MSALInterceptorConfigFactory } from '../../../config/msal.config';
import { AbstractAppAuthentication } from '../../app-services/authentication/authentication.app.abstract';
import { FactoryAppAuthentication } from '../../app-services/authentication/authentication.app.factory';
import { AppConfig } from '../../app-services/config/config.app';
import { AppMonitoring } from '../../app-services/monitoring/monitor.app';
import { AbstractEndpoints } from '../../services/endpoints/endpoints.service.abstract';
import { AbstractRouteGuard } from './route-guard/route-guard.abstract';
import { FactoryRouteGuard } from './route-guard/route-guard.factory';

@NgModule({
  declarations: [],
  imports: [
    MsalModule
  ]
})
export class MicrosoftAuthenticationLibraryModule {
  static forRoot(): ModuleWithProviders<MicrosoftAuthenticationLibraryModule> {
    return {
      ngModule: MicrosoftAuthenticationLibraryModule,
      providers: [
        { provide: HTTP_INTERCEPTORS, useClass: MsalInterceptor, multi: true },
        { provide: MSAL_INSTANCE, useFactory: MSALInstanceFactory, deps: [AppConfig] },
        { provide: MSAL_GUARD_CONFIG, useFactory: MSALGuardConfigFactory },
        { provide: MSAL_INTERCEPTOR_CONFIG, useFactory: MSALInterceptorConfigFactory },
        { provide: AbstractAppAuthentication, useFactory: FactoryAppAuthentication, deps: [MsalService, MsalBroadcastService, AbstractEndpoints, AppMonitoring, AppConfig, HttpClient] },
        { provide: AbstractRouteGuard, useFactory: FactoryRouteGuard, deps: [AppConfig, MSAL_GUARD_CONFIG, MsalBroadcastService, MsalService, Location, Router] },
        MsalService,
        MsalBroadcastService,
      ]
    };
  }
}
